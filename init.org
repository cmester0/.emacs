* What to write in the .emacs file:
#+BEGIN_SRC emacs-lisp :tangle no
  (require 'org)
  (org-babel-load-file (expand-file-name "~/Dropbox/.emacs.d/init.org"))
#+END_SRC

* Better start
#+BEGIN_SRC emacs-lisp
  (setq make-backup-files nil) ; stop creating backup~ files
  (setq auto-save-default nil) ; stop creating #autosave# files

  (custom-set-variables
   ;; custom-set-variables was added by Custom.
   ;; If you edit it by hand, you could mess it up, so be careful.
   ;; Your init file should contain only one such instance.
   ;; If there is more than one, they won't work right.
   '(inhibit-startup-screen t)
   '(org-babel-load-languages '((emacs-lisp . t) (C . t)))
   '(package-selected-packages '(company auctex)))
  (custom-set-faces
   ;; custom-set-faces was added by Custom.
   ;; If you edit it by hand, you could mess it up, so be careful.
   ;; Your init file should contain only one such instance.
   ;; If there is more than one, they won't work right.
   '(font-latex-subscript-face ((t nil)))
   '(font-latex-superscript-face ((t nil))))

  (setq visible-bell t) ; os / emacs sounds off

  (menu-bar-mode -1) ; Don't show menu bar
  (tool-bar-mode -1) ; Don't show tool bar

  (line-number-mode 1)   ;; Show line number
  (column-number-mode 1) ;; Show column number
#+END_SRC
* LaTeX
#+BEGIN_SRC emacs-lisp
  ;; AUC-TEX

  ;; Only change sectioning colour
  (setq font-latex-fontify-sectioning 'color)
  ;; super-/sub-script on baseline
  (setq font-latex-script-display (quote (nil)))
  ;; Do not change super-/sub-script font

  ;; Exclude bold/italic from keywords
  (setq font-latex-deactivated-keyword-classes
	'("italic-command" "bold-command" "italic-declaration" "bold-declaration"))

  ;; BEAMER

  ;; allow for export=>beamer by placing

  ;; #+LaTeX_CLASS: beamer in org files
  (unless (boundp 'org-export-latex-classes)
    (setq org-export-latex-classes nil))
  (add-to-list 'org-export-latex-classes
    ;; beamer class, for presentations
    '("beamer"
       "\\documentclass[11pt]{beamer}\n
	\\mode<{{{beamermode}}}>\n
	\\usetheme{{{{beamertheme}}}}\n
	\\usecolortheme{{{{beamercolortheme}}}}\n
	\\beamertemplateballitem\n
	\\setbeameroption{show notes}
	\\usepackage[utf8]{inputenc}\n
	\\usepackage[T1]{fontenc}\n
	\\usepackage{hyperref}\n
	\\usepackage{color}
	\\usepackage{listings}
	\\lstset{numbers=none,language=[ISO]C++,tabsize=4,
    frame=single,
    basicstyle=\\small,
    showspaces=false,showstringspaces=false,
    showtabs=false,
    keywordstyle=\\color{blue}\\bfseries,
    commentstyle=\\color{red},
    }\n
	\\usepackage{verbatim}\n
	\\institute{{{{beamerinstitute}}}}\n          
	 \\subject{{{{beamersubject}}}}\n"

       ("\\section{%s}" . "\\section*{%s}")
     
       ("\\begin{frame}[fragile]\\frametitle{%s}"
	 "\\end{frame}"
	 "\\begin{frame}[fragile]\\frametitle{%s}"
	 "\\end{frame}")))

    ;; letter class, for formal letters

    (add-to-list 'org-export-latex-classes

    '("letter"
       "\\documentclass[11pt]{letter}\n
	\\usepackage[utf8]{inputenc}\n
	\\usepackage[T1]{fontenc}\n
	\\usepackage{color}"
     
       ("\\section{%s}" . "\\section*{%s}")
       ("\\subsection{%s}" . "\\subsection*{%s}")
       ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
       ("\\paragraph{%s}" . "\\paragraph*{%s}")
       ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
#+END_SRC

* Org mode
#+BEGIN_SRC emacs-lisp
  (add-hook 'org-mode-hook 'org-hide-block-all)

  (org-babel-do-load-languages 'org-babel-load-languages
			       '((latex . t)))

  (setq org-confirm-babel-evaluate nil) ;; Maybe bad idea

  ;; Open pdfs with evince
  (setq org-file-apps
      '(("\\.mm\\'" . default)
	("\\.x?html?\\'" . default)
	("\\.pdf\\'" . "evince %s")
	(auto-mode . emacs)))
#+END_SRC

* C/C++ coding
** Indentation
#+BEGIN_SRC emacs-lisp
  ;; C indentation

  (setq c-default-style "linux"
	c-basic-offset 2
	tab-width 2
	indent-tabs-mode t)
#+END_SRC

* Coding in general
** Code folding
#+BEGIN_SRC emacs-lisp
  ;; (defun hide()
  ;;  (interactive)
  ;;  (hs-minor-mode)
  ;;  (hs-hide-all))

  ;; (add-hook 'prog-mode-hook 'hide) ;; Run on startup /

  ;; (defadvice goto-line
  ;;    (after expand-after-goto-line activate compile)
  ;;  "hideshow-expand affected block when using goto-line in a collapsed buffer"
  ;;  (save-excursion
  ;;    (hs-show-block))) ;; Expand on goto

  ;; (setq hs-isearch-open 'x)
  ;; (global-set-key (kbd "C-+") (kbd "C-c @ C-c")) ;; Toggles hiding
#+END_SRC
  
** CEDET
#+BEGIN_SRC emacs-lisp
  (require 'cc-mode)
  (require 'semantic)

  (global-semanticdb-minor-mode 1)
  (global-semantic-idle-scheduler-mode 1)

  (semantic-mode 1)

  (semantic-add-system-include "~/linux/kernel")
  (semantic-add-system-include "~/linux/include")

  (require 'ede)
  (global-ede-mode)
#+END_SRC

** Parenthesis matching
#+BEGIN_SRC emacs-lisp
  (show-paren-mode)
#+END_SRC
* Looks
#+BEGIN_SRC emacs-lisp
  (load-theme 'wheatgrass)
  ;; alternatives: manoj-dark  ,  tango-dark  ,  tsdh-dark  ,  wheatgrass  , wombat
#+END_SRC
* Keyboard leyout (English)
#+BEGIN_SRC emacs-lisp
  (set-input-method "british")
#+END_SRC

* Git
